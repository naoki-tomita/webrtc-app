{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","node_modules/verbinden/client/index.ts","index.js"],"names":["require","Verbinden","h","tag","attributes","el","document","createElement","Object","keys","forEach","key","startsWith","addEventListener","substr","toLowerCase","setAttribute","style","styleName","children","append","app","getElementById","createMenu","navigator","mediaDevices","enumerateDevices","devices","filter","it","kind","select","map","value","deviceId","label","onClick","startCamera","stream","getTracks","track","peer","addTrack","getUserMedia","video","exact","frameRate","ideal","max","width","height","audio","myStream","srcObject","play","addVideo","button","position","top","left","zIndex","display","Peer","ID","Math","random","toString","substring","ws","on","onReceiveSdpMessage","bind","peers","tracks","push","id","peerInstance","RTCPeerConnection","iceServers","urls","e","candidate","sendSdpToId","localDescription","streams","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","signalingState","setLocalDescription","members","requestConnect","from","setRemoteDescription","console","log","sendAnswerTo","connectionState","createAnswer","answer","sdp","type","channel","target","send","data","onOffer","onAnswer","initialize","setTimeout","requestConnection"],"mappings":"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","file":"webapp.fdde7ba8.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","type MessageType = \"target\" | \"broadcast\" | \"list\";\n\ninterface MessageBase {\n  type: MessageType;\n  channel: string;\n  data: any;\n}\n\ninterface Response {\n  id: string;\n}\n\ninterface TargetMessage extends MessageBase {\n  type: \"target\";\n  id: string;\n}\n\ninterface BroadcastMessage extends MessageBase {\n  type: \"broadcast\";\n}\n\ninterface ListingMessage extends MessageBase {\n  type: \"list\";\n  data: string[];\n}\n\ntype Message = TargetMessage | BroadcastMessage | ListingMessage;\ntype Callback =  (from: string, data: any) => void;\n\nexport class Verbinden {\n  private _id: string;\n  get id() { return this._id }\n\n  private client: WebSocket;\n\n  private _members: string[] = [];\n  get members() { return this._members.filter(id => id !== this.id) }\n\n  private observables: { [channel: string]: Callback[] } = {}\n  constructor(url: string) {\n    this._id = Math.random().toString(32).substring(2);\n    this.client = new WebSocket(`${url}?id=${this._id}`);\n    this.client.addEventListener(\"message\", this.receiveMessage.bind(this));\n  }\n\n  private receiveMessage(e: MessageEvent) {\n    const message = JSON.parse(e.data) as Message & Response;\n    switch (message.type) {\n      case \"list\":\n        this._members = message.data;\n        this.observables.__member_changed__.forEach(cb => cb(\"__server__\", this._members));\n        return;\n      default:\n        this.observables[message.channel].forEach(cb => cb(message.id, message.data));\n        return;\n    }\n  }\n\n  on(channel: string, cb: Callback) {\n    this.observables[channel] = this.observables[channel] || [];\n    this.observables[channel].push(cb);\n  }\n\n  onMemberChanged(cb: () => void) {\n    this.observables[\"__member_changed__\"].push(cb);\n  }\n\n  channel(channel: string) {\n    return {\n      target: (id: string) => {\n        return {\n          send: (data: any) => this._send({ type: \"target\", channel, id, data })\n        };\n      },\n      broadcast: (data: any) => {\n        this._send({ type: \"broadcast\", channel, data });\n      }\n    }\n  }\n\n  send(channel: string, target: string, data: any) {\n    this._send({ type: \"target\", channel, id: target, data });\n  }\n\n  private _send(message: Message) {\n    this.client.send(JSON.stringify(message));\n  }\n}\n","require(\"regenerator-runtime/runtime\");\nconst { Verbinden } = require(\"verbinden/client\");\n\n/**\n * @param {string} tag\n * @param {{[key: string]: any}} attributes\n * @param  {...any} children\n * @returns {any}\n */\nfunction h(tag, attributes, ...children) {\n  const el = document.createElement(tag);\n  Object.keys(attributes).forEach(key => {\n    if (key.startsWith(\"on\")) {\n      el.addEventListener(key.substr(2).toLowerCase(), attributes[key]);\n      return;\n    }\n    if (key === \"style\") {\n      const style = attributes[\"style\"]\n      Object.keys(style).forEach(styleName => {\n        el.style[styleName] = style[styleName];\n      });\n      return;\n    }\n    el.setAttribute(key, attributes[key]);\n    return;\n  });\n  el.append(...children);\n  return el;\n}\n\nconst app = document.getElementById(\"app\");\nasync function createMenu() {\n  const devices = (await navigator.mediaDevices.enumerateDevices()).filter(it => it.kind === \"videoinput\");\n  const select = h(\"select\", {},\n    ...devices.map(it => h(\"option\", { value: it.deviceId }, it.label))\n  );\n  app?.append(\n    h(\"div\", {}, select,\n      select,\n      h(\"button\", { onClick: async () => {\n        const stream = await startCamera(select.value);\n        stream.getTracks().forEach(track => peer.addTrack(track, stream));\n      }}, \"select\")\n    )\n  );\n}\n\nasync function startCamera(deviceId) {\n  const myStream = await navigator.mediaDevices.getUserMedia({\n    video: {\n      deviceId: { exact: deviceId },\n      frameRate: { ideal: 10, max: 15 },\n      width: 480, height: 300\n    },\n    audio: false,\n  });\n  const video = h(\"video\", {});\n  app?.append(h(\"div\", {}, video));\n  video.srcObject = myStream;\n  video.play();\n  return myStream;\n}\n\n/**\n * @param {MediaStream} stream\n */\nasync function addVideo(stream) {\n  const video = h(\"video\", {});\n  const button = h(\"button\", { style: { position: \"absolute\", top: 50, left: 30, zIndex: 1 }, onClick: () => (button.style.display = \"none\", video.play()) }, \"play\");\n  app?.append(h(\"div\", {},\n    button,\n    video,\n  ));\n  video.srcObject = stream;\n}\n\nclass Peer {\n  constructor() {\n    this.ID = Math.random().toString(32).substring(2);\n    this.ws = new Verbinden(`wss://webrtc-room7.herokuapp.com`);\n    this.ws.on(\"signaling\", this.onReceiveSdpMessage.bind(this));\n    /** @type {any} */\n    this.peers = {};\n    /** @type {{track: MediaStreamTrack, stream: MediaStream}[]} */\n    this.tracks = []\n  }\n\n  addTrack(track, stream) {\n    this.tracks.push({ track, stream });\n    Object.keys(this.peers).forEach(id => {\n      const peer = this.peerInstance(id);\n      peer.addTrack(track, stream);\n    })\n  }\n\n  /**\n   * @param {string} id\n   * @returns {RTCPeerConnection}\n   */\n  peerInstance(id) {\n    if (this.peers[id]) {\n      return this.peers[id];\n    }\n    const peer = this.peers[id] = new RTCPeerConnection({\n      iceServers: [\n        { urls: \"stun:stun.webrtc.ecl.ntt.com:3478\" }\n      ]\n    });\n\n    peer.addEventListener(\"icecandidate\", e =>\n      !e.candidate && this.sendSdpToId(id, peer.localDescription || {}))\n\n    peer.addEventListener(\"track\", e =>\n      e.streams.forEach(stream => addVideo(stream)));\n\n    peer.addEventListener(\"negotiationneeded\", async e => {\n      const offer = await peer.createOffer({\n        offerToReceiveAudio: true,\n        offerToReceiveVideo: true,\n      });\n      if (peer.signalingState != \"stable\") return;\n      await peer.setLocalDescription(offer);\n      this.sendSdpToId(id, peer.localDescription || {});\n    });\n\n    this.tracks.forEach(({ track, stream }) => peer.addTrack(track, stream));\n\n    return peer;\n  }\n\n  async requestConnection() {\n    this.ws.members.forEach(this.requestConnect.bind(this));\n  }\n\n  async requestConnect(id) {\n    const peer = this.peerInstance(id);\n    const offer = await peer.createOffer();\n    await peer.setLocalDescription(offer);\n    this.sendSdpToId(id, offer);\n  }\n\n  /**\n   * @param {string} from\n   * @param {RTCSessionDescriptionInit} offer\n   */\n  async onOffer(from, offer) {\n    const peer = this.peerInstance(from);\n    await peer.setRemoteDescription(offer);\n    console.log(\"success to set remote description\")\n    this.sendAnswerTo(from);\n  }\n\n  /**\n   * @param {string} id\n   */\n  async sendAnswerTo(id) {\n    const peer = this.peerInstance(id);\n    if (peer.connectionState === \"connected\") {\n      return;\n    }\n\n    const answer = await peer.createAnswer();\n    await peer.setLocalDescription(answer);\n    this.sendSdpToId(id, peer.localDescription || {});\n  }\n\n  /**\n   * @param {string} from\n   * @param {RTCSessionDescriptionInit} answer\n   */\n  async onAnswer(from, answer) {\n    const peer = this.peerInstance(from);\n    if (peer.connectionState === \"connected\") {\n      return;\n    }\n    await peer.setRemoteDescription(answer);\n  }\n\n  /**\n   * @param {string} id\n   * @param {RTCSessionDescriptionInit} sdp\n   */\n  sendSdpToId(id, sdp) {\n    console.log(\"send to: \", id, sdp.type);\n    this.ws.channel(\"signaling\").target(id).send(sdp);\n  }\n\n  onReceiveSdpMessage(id, data) {\n    switch (data.type) {\n      case \"offer\":\n        this.onOffer(id, data);\n        break;\n      case \"answer\":\n        this.onAnswer(id, data);\n        break;\n    }\n  }\n}\n\nconst peer = new Peer();\nasync function initialize() {\n  await createMenu();\n  setTimeout(() => peer.requestConnection(), 2000);\n}\n\ninitialize();\n"]}